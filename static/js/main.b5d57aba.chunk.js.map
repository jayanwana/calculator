{"version":3,"sources":["components/calc.js","App.js","serviceWorker.js","index.js"],"names":["Calc","props","state","calculation","result","clear","history","step","shift","number","this","setState","y","sin","x","Math","PI","cos","tan","log","log10","ln","factorial","percent","Sqrt","sqrt","evaluation","replace","m","n","eval","e","console","name","length","substring","round","d","abs","toString","indexOf","l","p","xf","p2","t","num","denom","floor","includes","equalsTo","Ans","className","Display","value","onClick","scrollUp","scrollDown","backspace","enterNumber","convertFraction","ans","React","Component","type","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5d57aba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Calc extends React.Component {\r\nconstructor(props) {\r\n  super (props);\r\n  this.state = {\r\n    calculation: \"\",\r\n    result: \"\",\r\n    clear: false,\r\n    history: [],\r\n    step: 0,\r\n    shift: false,\r\n  };\r\n  }\r\n\r\n  enterNumber(number) {\r\n    if (this.state.clear) {\r\n      this.setState({\r\n        calculation: number,\r\n        clear: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        calculation: `${this.state.calculation}${number}`\r\n      })\r\n    }\r\n  }\r\n\r\n  ans() {\r\n    if (this.state.result !== \"SyntaxError\" && this.state.result !== \"TypeError\") {\r\n      if(this.state.clear) {\r\n    this.setState({\r\n      calculation: this.state.result,\r\n      clear: false\r\n    })} else {\r\n        this.setState({ calculation: `${this.state.calculation}${this.state.result}`})\r\n      }\r\n  }}\r\n  equalsTo(y) {\r\n    function sin(x) { return Math.sin(x * Math.PI/180)};\r\n    function cos(x) { return Math.cos(x * Math.PI/180)};\r\n    function tan(x) { return Math.tan(x * Math.PI/180)};\r\n    function log(x) { return Math.log10(x)};\r\n    function ln(x) { return Math.log(x)};\r\n    function factorial(x) { return (x != 1) ? x * factorial(x - 1) : 1}\r\n    function percent(x) { return x/100 }\r\n    let Sqrt = Math.sqrt\r\n    if (y) {\r\n      try {\r\n        let evaluation = y;\r\n        evaluation = evaluation.replace(/[√π^]/g, function (m) {\r\n            return {\r\n                '√': 'Sqrt',\r\n                \"π\": `(${Math.PI})`,\r\n                \"^\": '**'\r\n            }[m];\r\n          });\r\n        evaluation = evaluation.replace(/(\\d+)!/g, (m, n) => factorial(+n))\r\n        evaluation = evaluation.replace(/(\\d+)%/g, (m, n) => percent(+n))\r\n        let result = eval(evaluation);\r\n        this.setState({\r\n          result,\r\n          clear: true,\r\n          history: [...this.state.history, y],\r\n          step: 0\r\n        })\r\n      } catch (e) {\r\n        console.log(e);\r\n        this.setState(\r\n          {\r\n            result: e.name,\r\n          }\r\n        )\r\n      }}}\r\n\r\n  scrollUp() {\r\n    if (this.state.history.length > 1 && this.state.history.length > this.state.step) {\r\n\r\n    this.setState({\r\n      step: this.state.step + 1,\r\n      calculation: this.state.history[this.state.history.length-(this.state.step+1)],\r\n      clear: false,\r\n    })}\r\n  }\r\n\r\n  scrollDown() {\r\n    if (this.state.history.length > 1 && this.state.step > 1) {\r\n\r\n    this.setState({\r\n      step: this.state.step - 1,\r\n      calculation: this.state.history[this.state.history.length-(this.state.step-1)],\r\n    })}\r\n  }\r\n\r\n  backspace() {\r\n    this.setState(\r\n      { calculation: this.state.calculation.substring(0, this.state.calculation.length - 1) }\r\n    )\r\n\r\n  }\r\n\r\n  clear() {\r\n    this.setState({\r\n      calculation: \"\",\r\n      result: \"\",\r\n      step: 0\r\n    })\r\n  }\r\n\r\n  convertFraction(x) {\r\n    if (typeof x === 'number') {\r\n      if (Math.round(x) !== x) {\r\n        x = Math.abs(x)\r\n        let d = x.toString().indexOf('.');\r\n        let l = x.toString().length;\r\n        if ( (l-d) < 5 ) {\r\n          let p = 10**((l-1)-d);\r\n          let xf = x * p;\r\n          let p2 = p\r\n          while(p2){\r\n            let t = p2;\r\n            p2 = xf % p2;\r\n            xf = t;\r\n        }\r\n        let num = (x*p)/xf;\r\n        let denom = p/xf;\r\n        this.setState(\r\n          { result: `${num}/${denom}` }\r\n        )\r\n      } else {\r\n        let n = x - Math.floor(x)\r\n        if ( n.toString().substring(0, 6) === \"0.6666\" ) {\r\n          this.setState({result: '2/3'})\r\n        } else if (n.toString().substring(0, 6) === \"0.3333\") {\r\n          this.setState({result: '1/3'})\r\n        }\r\n      }\r\n    }} else if ( x.includes('/')) {\r\n      this.equalsTo(x)\r\n    }\r\n  }\r\n\r\n  shift() {\r\n    this.setState({ shift : !this.state.shift })\r\n  }\r\n\r\n  render() {\r\n    let Ans = this.state.result\r\n  return(\r\n    <div className='calc-wrapper'>\r\n      <h1>Calculator</h1>\r\n      <Display calculation={this.state.calculation} value={ this.state.result } />\r\n      <div className=\"control\">\r\n        <button onClick={() => this.shift()}>Shift</button>\r\n        <button onClick={() => this.scrollUp()}> &#8593;</button>\r\n        <button onClick={() => this.scrollDown()}>&#8595;</button>\r\n        <button onClick={() => this.backspace()}>DEL</button>\r\n        <button onClick={() => this.clear()}>C</button>\r\n      </div>\r\n      <div className='comp-func'>\r\n        <button onClick={() => this.enterNumber('sin(')}>Sin</button>\r\n        <button onClick={() => this.enterNumber('cos(')}>Cos</button>\r\n        <button onClick={() => this.enterNumber('tan(')}>Tan</button>\r\n        <button onClick={() => this.enterNumber('log(')}>Log</button>\r\n        <button onClick={() => this.enterNumber('ln(')}>ln</button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}**(-1)` : '**(-1)')}>x<sup>-1</sup></button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}^2` : '^2')}>x<sup>2</sup></button>\r\n        <button onClick={() => this.enterNumber('*10^')}>x10<sup>x</sup></button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}**(` : '**(')}>x<sup>x</sup></button>\r\n        <button onClick={() => this.enterNumber('√(')}>√</button>\r\n        <button onClick={() => this.enterNumber('!')}>!</button>\r\n        <button onClick={() => this.enterNumber('%')}>%</button>\r\n        <button onClick={() => this.convertFraction(this.state.result)}>S=D</button>\r\n        <button onClick={() => this.enterNumber('π')}>&pi;</button>\r\n        <button className='eval-button-2' onClick={() => this.ans()}>Ans</button>\r\n      </div>\r\n      <div className='simple-func'>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}+` : '+')}>+</button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}-` : '-')}>-</button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}*` : '*')}>X</button>\r\n        <button onClick={() => this.enterNumber(this.state.clear ? `${Ans}/` : '/')}>/</button>\r\n        <button onClick={() => this.enterNumber('(')}>(</button>\r\n        <button onClick={() => this.enterNumber(')')}>)</button>\r\n      </div>\r\n      <div className='numbers'>\r\n        <button onClick={() => this.enterNumber(1)}>1</button>\r\n        <button onClick={() => this.enterNumber(2)}>2</button>\r\n        <button onClick={() => this.enterNumber(3)}>3</button>\r\n        <button onClick={() => this.enterNumber(4)}>4</button>\r\n        <button onClick={() => this.enterNumber(5)}>5</button>\r\n        <button onClick={() => this.enterNumber(6)}>6</button>\r\n        <button onClick={() => this.enterNumber(7)}>7</button>\r\n        <button onClick={() => this.enterNumber(8)}>8</button>\r\n        <button onClick={() => this.enterNumber(9)}>9</button>\r\n        <button onClick={() => this.enterNumber('.')}>.</button>\r\n        <button onClick={() => this.enterNumber(0)}>0</button>\r\n        <button className='eval-button' onClick={() => this.equalsTo(this.state.calculation)}>=</button>\r\n      </div>\r\n      <div className='eval'>\r\n\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n        )}\r\n      }\r\n\r\nfunction Display(props) {\r\n  return (\r\n    <div className=\"input-group\">\r\n      <input className=\"input-group calc\" type=\"text\" value={props.calculation} disabled={true}/>\r\n      <input className=\"input-group result\" type=\"text\" disabled={true} value={props.value}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Calc;\r\n","import React from 'react';\nimport './App.css';\nimport Calc from './components/calc.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}